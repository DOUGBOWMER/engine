datasource db {
  url      = env("POSTGRES_CONNECTION_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model WalletDetails {
  address            String        @id @map("address")
  type               String        @map("type")
  alias              String?       @map("alias")

  // KMS
  awsKmsKeyId        String? @map("awsKmsKeyId")
  awsKmsArn          String? @map("awsKmsArn")
  // GCP
  gcpKmsKeyRingId    String? @map("gcpKmsKeyRingId") @db.VarChar(50)
  gcpKmsKeyId        String? @map("gcpKmsKeyId") @db.VarChar(50)
  gcpKmsKeyVersionId String? @map("gcpKmsKeyVersionId") @db.VarChar(20)
  gcpKmsLocationId   String? @map("gcpKmsLocationId") @db.VarChar(20)
  gcpKmsResourcePath String? @map("gcpKmsResourcePath") @db.Text

  @@map("wallet_details")
}

model WalletNonce {
  address String @map("address")
  chainId Int    @map("chainId")
  nonce   Int    @default(0) @map("nonce")

  @@id([address, chainId])
  @@map("wallet_nonce")
}

model Transactions {
  id                        String    @id @default(uuid()) @map("id")
  chainId                   Int       @map("chainId")
  // Shared
  data                      String?   @map("data")
  value                     String?   @map("value")
  gasLimit                  String?   @map("gasLimit")
  nonce                     Int?      @map("nonce")
  maxFeePerGas              String?   @map("maxFeePerGas")
  maxPriorityFeePerGas      String?   @map("maxPriorityFeePerGas")
  // Transaction Details
  fromAddress               String?   @map("fromAddress")
  toAddress                 String?   @map("toAddress")
  gasPrice                  String?   @map("gasPrice")
  transactionType           Int?      @map("transactionType")
  transactionHash           String?   @map("transactionHash")
  // User Operation
  signerAddress             String?   @map("signerAddress")
  accountAddress            String?   @map("accountAddress")
  target                    String?   @map("target")
  sender                    String?   @map("sender")
  initCode                  String?   @map("initCode")
  callData                  String?   @map("callData")
  callGasLimit              String?   @map("callGasLimit")
  verificationGasLimit      String?   @map("verificationGasLimit")
  preVerificationGas        String?   @map("preVerificationGas")
  paymasterAndData          String?   @map("paymasterAndData")
  userOpHash                String?   @map("userOpHash")
  // Enriched Data
  functionName              String?   @map("functionName")
  functionArgs              String?   @map("functionArgs")
  extension                 String?   @map("extension")
  // TODO: These shouldnt be in here...
  deployedContractAddress   String?   @map("deployedContractAddress")
  deployedContractType      String?   @map("deployedContractType")
  // Timestamps
  queuedAt                  DateTime  @default(now()) @map("queuedAt")
  processedAt               DateTime? @map("processedAt")
  sentAt                    DateTime? @map("sentAt")
  minedAt                   DateTime? @map("minedAt")
  // Retries
  retryCount                Int       @default(0) @map("retryCount")
  retryGasValues            Boolean?  @default(false) @map("retryGasValues")
  retryMaxPriorityFeePerGas String?   @map("retryMaxPriorityFeePerGas")
  retryMaxFeePerGas         String?   @map("retryMaxFeePerGas")
  // Error
  errorMessage              String?   @map("errorMessage")
  // Block Numbers
  sentAtBlockNumber         Int?      @map("sentAtBlockNumber")
  blockNumber               Int?      @map("blockNumber")

  @@map("transactions")
}

// ToDo: Maybe Normalize it more?
// PK-FK, but then we need to store each config as a separate row
model Configuration { 
  id       String @id @default(uuid()) @map("id")
  configType String @map("configType")
  
  // Config Data
  awsAccessKey                          String?           @map("awsAccessKey")
  awsAccessKeyIV                        String?           @map("awsAccessKeyIV")
  awsAccessKeyAuthTag                   String?           @map("awsAccessKeyAuthTag")

  awsSecretAccessKey                    String?           @map("awsSecretAccessKey")
  awsSecretAccessKeyIV                  String?           @map("awsSecretAccessKeyIV")
  awsSecretAccessKeyAuthTag             String?           @map("awsSecretAccessKeyAuthTag")

  awsRegion                             String?           @map("awsRegion")
  awsRegionIV                           String?           @map("awsRegionIV")
  awsRegionAuthTag                      String?           @map("awsRegionAuthTag")

  gcpProjectId                          String?           @map("gcpProjectId")
  gcpProjectIdIV                        String?           @map("gcpProjectIdIV")
  gcpProjectIdAuthTag                   String?           @map("gcpProjectIdAuthTag")

  gcpKmsRingId                          String?           @map("gcpKmsRingId")
  gcpKmsRingIdIV                        String?           @map("gcpKmsRingIdIV")
  gcpKmsRingIdAuthTag                   String?           @map("gcpKmsRingIdAuthTag")

  gcpLocationId                         String?           @map("gcpLocationId")
  gcpLocationIdIV                       String?           @map("gcpLocationIdIV")
  gcpLocationIdAuthTag                  String?           @map("gcpLocationIdAuthTag")

  gcpAppCredentialEmail                 String?           @map("gcpAppCredentialEmail")
  gcpAppCredentialEmailIV               String?           @map("gcpAppCredentialEmailIV")
  gcpAppCredentialEmailAuthTag          String?           @map("gcpAppCredentialEmailAuthTag")

  gcpAppCredentialPrivateKey            String?           @map("gcpAppCredentialPrivateKey")
  gcpAppCredentialPrivateKeyIV          String?           @map("gcpAppCredentialPrivateKeyIV")
  gcpAppCredentialPrivateKeyAuthTag     String?           @map("gcpAppCredentialPrivateKeyAuthTag")
  
  // localWalletPrivateKey        String?           @map("localWalletPrivateKey")
  // localWalletMnemonic          String?           @map("localWalletMnemonic")
  // localWalletEncryptedJson String?               @map("localWalletEncryptedJson")
  // localWalletPassword          String?           @map("localWalletPassword")
  @@map("configuration")
}